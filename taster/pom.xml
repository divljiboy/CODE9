<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.levi9.taster</groupId>
	<artifactId>taster</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Taster</name>
	<description>Application for technical test for job candidates.</description>
	<url>https://taster.levi9.com</url>
	<inceptionYear>2014</inceptionYear>
	
	<organization>
		<name>Levi9 IT Services</name>
		<url>http://www.levi9.com</url>
	</organization>

	<developers>
		<developer>
			<id>a.stoisavljevic</id>
			<name>Aleksandar Stoisavljevic</name>
			<email>a.stoisavljevic@levi9.com</email>
			<organization>Levi9 IT Services</organization>
			<organizationUrl>http://www.levi9.com</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
		<developer>
			<id>d.gajic</id>
			<name>Dragan Gajic</name>
			<email>d.gajic@levi9.com</email>
			<organization>Levi9 IT Services</organization>
			<organizationUrl>http://www.levi9.com</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
		</developer>
		<developer>
			<id>l.vuckovic</id>
			<name>Luka Vuckovic</name>
			<email>l.vuckovic@levi9.com</email>
			<organization>Levi9 IT Services</organization>
			<organizationUrl>http://www.levi9.com</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
		<developer>
			<id>m.jovanovic</id>
			<name>Milos Jovanovic</name>
			<email>m.jovanovic@levi9.com</email>
			<organization>Levi9 IT Services</organization>
			<organizationUrl>http://www.levi9.com</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
		<developer>
			<id>p.stanic</id>
			<name>Predrag Stanic</name>
			<email>p.stanic@levi9.com</email>
			<organization>Levi9 IT Services</organization>
			<organizationUrl>http://www.levi9.com</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
		<developer>
			<id>s.bogdanovic</id>
			<name>Slobodan Bogdanovic</name>
			<email>s.bogdanovic@levi9.com</email>
			<organization>Levi9 IT Services</organization>
			<organizationUrl>http://www.levi9.com</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

	<ciManagement>
		<system>jenkins</system>
		<url>https://ci.levi9.com</url>
	</ciManagement>
	
	<scm>
		<connection>https://gitlab.levi9.com/d.gajic/code9.git</connection>
		<developerConnection>https://gitlab.levi9.com/d.gajic/code9.git</developerConnection>
	</scm>
	
	<distributionManagement>
		<repository>
			<id>code9</id>
			<url>https://repo.levi9.com/content/repositories/levi9-code9.releases/</url>
		</repository>
		<snapshotRepository>
			<id>code9.snapshots</id>
			<url>https://repo.levi9.com/content/repositories/levi9-code9.snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<modules>
		<module>taster-commons</module>
		<module>taster-core</module>
		<module>taster-core-jpa</module>
		<module>taster-core-memory</module>
		<module>taster-auth</module>
		<module>taster-rest-api</module>
		<module>taster-spa-bone</module>
		<module>taster-admin-spa-bone</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<java.version>1.7</java.version>
		
		<!-- Dependency versions -->
		<org.springframework.version>4.0.3.RELEASE</org.springframework.version>
		<spring.security.version>3.2.3.RELEASE</spring.security.version>
		<spring.security.oauth2.version>1.0.5.RELEASE</spring.security.oauth2.version>
		<spring.data.jpa.version>1.5.2.RELEASE</spring.data.jpa.version>
		<hibernate.version>4.3.5.Final</hibernate.version>
		<javax.validation.version>1.1.0.Final</javax.validation.version>
		<org.hibernate.hibernate-validator>5.0.3.Final</org.hibernate.hibernate-validator>
		<jackson-version>2.3.1</jackson-version>
		<ch.qos.logback.version>1.0.13</ch.qos.logback.version>
		<org.slf4j.version>1.7.5</org.slf4j.version>
		<jstl.version>1.2</jstl.version>
		<servlet-api.version>3.0.1</servlet-api.version>
		<derby.version>10.10.1.1</derby.version>
		<moo.version>1.3</moo.version>
		<bonecp.version>0.8.0.RELEASE</bonecp.version>
		<mysql.connector.version>5.1.30</mysql.connector.version>
		<query.dsl.version>3.3.2</query.dsl.version>
		<query.dsl.hql.version>1.9.7</query.dsl.hql.version>
		<junit.version>4.11</junit.version>
		<hamcrest.version>1.3</hamcrest.version>
		<jsonpath.version>0.9.1</jsonpath.version>
		<dbunit.version>2.5.0</dbunit.version>
		<dbunit.spring.version>1.1.0</dbunit.spring.version>
		
		<!-- Testing -->
		<skip.tests>false</skip.tests>
    	<skip.unit.tests>false</skip.unit.tests>
    	<skip.integration.tests>true</skip.integration.tests>
    	<skip.automated.tests>true</skip.automated.tests>
    	<skip.performance.tests>true</skip.performance.tests>
    	
		<!-- Sonar -->
	    <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
	    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
	    <sonar.jacoco.reportPath>${project.basedir}/target/jacoco-ut.exec</sonar.jacoco.reportPath>
	    <sonar.jacoco.itReportPath>${project.basedir}/target/jacoco-it.exec</sonar.jacoco.itReportPath>
	    <!-- Skip some modules if needed -->
	    <!-- <sonar.skippedModules>some-module</sonar.skippedModules> -->
	</properties>

	<dependencyManagement>
		<!-- Internal dependencies -->
		<dependencies>
			<dependency>
				<groupId>com.levi9.taster</groupId>
				<artifactId>taster-commons</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.levi9.taster</groupId>
				<artifactId>taster-core</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.levi9.taster</groupId>
				<artifactId>taster-core-jpa</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.levi9.taster</groupId>
				<artifactId>taster-core-memory</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.levi9.taster</groupId>
				<artifactId>taster-rest-api</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.levi9.taster</groupId>
				<artifactId>taster-auth</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.levi9.taster</groupId>
				<artifactId>taster-spa-bone</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.levi9.taster</groupId>
				<artifactId>taster-admin-spa-bone</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${org.springframework.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			
			<!-- Logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${org.slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${org.slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${ch.qos.logback.version}</version>
				<scope>runtime</scope>
			</dependency>

			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>1</version>
			</dependency>

			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${javax.validation.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${org.hibernate.hibernate-validator}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson-version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security.oauth</groupId>
				<artifactId>spring-security-oauth2</artifactId>
				<version>${spring.security.oauth2.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>${jsonpath.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>${dbunit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.springtestdbunit</groupId>
			<artifactId>spring-test-dbunit</artifactId>
			<version>${dbunit.spring.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			
			<!-- Unit tests -->
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-surefire-plugin</artifactId>
			    <version>2.16</version>
			    <configuration>
			        <skip>${skip.tests}</skip>
			        <skipTests>${skip.unit.tests}</skipTests>
			        <argLine>${surefireArgLine}</argLine>
			    </configuration>
			</plugin>
			
			<!-- Integration tests -->
			<plugin>
			    <artifactId>maven-failsafe-plugin</artifactId>
			    <version>2.17</version>
			    <executions>
			        <execution>
			            <goals>
			                <goal>integration-test</goal>
			                <goal>verify</goal>
			            </goals>
			            <configuration>
			                <!-- Skips integration tests if the value of skip.integration.tests 
			                    property is true -->
			                <skipTests>${skip.tests}</skipTests>
			                <skipITs>${skip.integration.tests}</skipITs>
			                <argLine>${failsafeArgLine}</argLine>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			
			<!-- Build helper to include integration tests source folders -->
			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>build-helper-maven-plugin</artifactId>
			    <version>1.8</version>
			    <executions>
			        <!-- Parse project version -->
			        <execution>
			            <phase>initialize</phase>
			            <id>parse-version</id>
			            <goals>
			                <goal>parse-version</goal>
			            </goals>
			        </execution>
			        <!-- States that the plugin's add-test-source goal is executed at generate-test-sources 
			            phase. -->
			        <execution>
			            <id>add-integration-test-sources</id>
			            <phase>generate-test-sources</phase>
			            <goals>
			                <goal>add-test-source</goal>
			            </goals>
			            <configuration>
			                <!-- Configures the source directory of integration tests. -->
			                <sources>
			                    <source>src/integration-test/java</source>
			                </sources>
			            </configuration>
			        </execution>
			        <execution>
			            <id>add-integration-test-resources</id>
			            <phase>generate-test-resources</phase>
			            <goals>
			                <goal>add-test-resource</goal>
			            </goals>
			            <configuration>
			                <resources>
			                    <resources>
			                        <directory>src/integration-test/resources</directory>
			                    </resources>
			                </resources>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			
			<!-- JaCoCo - Code quality analysis -->
			<plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>0.7.0.201403182114</version>
			    <executions>
			        <!-- Prepares the property pointing to the JaCoCo runtime agent which 
			            is passed as VM argument when Maven the Surefire plugin is executed. -->
			        <execution>
			            <id>pre-unit-test</id>
			            <goals>
			                <goal>prepare-agent</goal>
			            </goals>
			            <configuration>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <destFile>${sonar.jacoco.reportPath}</destFile>
			                <append>true</append>
			                <!-- Sets the name of the property containing the settings for JaCoCo 
			                    runtime agent. -->
			                <propertyName>surefireArgLine</propertyName>
			                <skip>${skip.unit.tests}</skip>
			            </configuration>
			        </execution>
			        <!-- Ensures that the code coverage report for unit tests is created 
			            after unit tests have been run. -->
			        <execution>
			            <id>post-unit-test</id>
			            <phase>test</phase>
			            <goals>
			                <goal>report</goal>
			            </goals>
			            <configuration>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <dataFile>${sonar.jacoco.reportPath}</dataFile>
			                <append>true</append>
			                <!-- Sets the output directory for the code coverage report. -->
			                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
			                <skip>${skip.unit.tests}</skip>
			            </configuration>
			        </execution>
			        <!-- The Executions required by unit tests are omitted. -->
			        <!-- Prepares the property pointing to the JaCoCo runtime agent which 
			            is passed as VM argument when Maven the Failsafe plugin is executed. -->
			        <execution>
			            <id>pre-integration-test</id>
			            <phase>pre-integration-test</phase>
			            <goals>
			                <goal>prepare-agent</goal>
			            </goals>
			            <configuration>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <destFile>${sonar.jacoco.itReportPath}</destFile>
			                <append>true</append>
			                <!-- Sets the name of the property containing the settings for JaCoCo 
			                    runtime agent. -->
			                <propertyName>failsafeArgLine</propertyName>
			                <skip>${skip.integration.tests}</skip>
			            </configuration>
			        </execution>
			        <!-- Ensures that the code coverage report for integration tests after 
			            integration tests have been run. -->
			        <execution>
			            <id>post-integration-test</id>
			            <phase>post-integration-test</phase>
			            <goals>
			                <goal>report</goal>
			            </goals>
			            <configuration>
			                <dataFile>${sonar.jacoco.itReportPath}</dataFile>
			                <append>true</append>
			                <!-- Sets the output directory for the code coverage report. -->
			                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
			                <skip>${skip.integration.tests}</skip>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			
			<!-- Sonar -->
			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>sonar-maven-plugin</artifactId>
			    <version>2.2</version>
			</plugin>
			
			<!-- JMeter -->
			<plugin>
			    <groupId>com.lazerycode.jmeter</groupId>
			    <artifactId>jmeter-maven-plugin</artifactId>
			    <version>1.9.0</version>
			    <executions>
			        <execution>
			            <id>jmeter-tests</id>
			            <phase>verify</phase>
			            <goals>
			                <goal>jmeter</goal>
			            </goals>
			            <configuration>
			                <propertiesUser>
			                    <jmeterTestHost>${performance.test.server.host}</jmeterTestHost>
			                </propertiesUser>
			                <skipTests>${skip.performance.tests}</skipTests>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
		</plugins>
		
		<pluginManagement>
			<plugins>
				<!-- This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.7.0.201403182114,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[1.8,)</versionRange>
										<goals>
											<goal>parse-version</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[1.8,)</versionRange>
										<goals>
											<goal>add-test-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[1.8,)</versionRange>
										<goals>
											<goal>add-test-resource</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>properties-maven-plugin</artifactId>
										<versionRange>[*,)</versionRange>
										<goals>
											<goal>read-project-properties</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<profiles>
		<profile>
			<id>user</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<env>${user.name}</env>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<properties>
				<env>dev</env>
			</properties>
		</profile>
		
		<profile>
			<id>integration-test</id>
			<properties>
				<skip.unit.tests>true</skip.unit.tests>
				<skip.integration.tests>false</skip.integration.tests>
				<env>test</env>
			</properties>
		</profile>
		<profile>
			<id>automated-test</id>
			<properties>
				<skip.unit.tests>true</skip.unit.tests>
				<skip.automated.tests>false</skip.automated.tests>
				<env>test</env>
			</properties>
		</profile>
		<profile>
			<id>performance-test</id>
			<properties>
				<skip.unit.tests>true</skip.unit.tests>
				<skip.performance.tests>false</skip.performance.tests>
				<env>test</env>
			</properties>
		</profile>
	</profiles>

</project>
